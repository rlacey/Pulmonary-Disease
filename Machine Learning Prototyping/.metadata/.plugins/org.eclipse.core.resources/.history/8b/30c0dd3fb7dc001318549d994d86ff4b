import SVMTools.Parameter;
import SVMTools.Problem;
import libsvm.svm;
import libsvm.svm_model;
import libsvm.svm_node;
import libsvm.svm_parameter;
import libsvm.svm_problem;

public class Main {

	private static final String DEFAULT_PARAM = "-t 2 -c 100";	
	
	private final static int CLASSES = 2;
	
	private static final double[][] train = {
		 {1, -1, 1},
		 {1, -0.985765124555, 0.74531835206},
		 {1, -0.807829181495, 0.850187265918},
		 {2, 0.722419928826, -1},
		 {2, 1, 0.970037453184}
	};
	
	private static final double[][] test = {
		{1, -0.985765124555, 0.962546816479},
		{2, 0.722419928826, -0.797752808989}
	};

	public static void main(String[] args) {
		svm_parameter parameter = Parameter.generate(DEFAULT_PARAM);		
		
		svm_problem problem = Problem.generate(parameter, train);

		svm_model model = svm.svm_train(problem, parameter);

		System.out.println("Evaluating...\n");
		for (int i = 0; i < test.length; i++) {
			System.out.printf("Node %d", i);
			evaluate(test[i], model);
		}
	}
}
