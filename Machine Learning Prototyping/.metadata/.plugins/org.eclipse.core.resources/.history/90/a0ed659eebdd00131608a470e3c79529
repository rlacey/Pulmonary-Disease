import SVMTools.Classify;
import SVMTools.Data;
import SVMTools.Parameter;
import SVMTools.Problem;
import libsvm.svm;
import libsvm.svm_model;
import libsvm.svm_parameter;
import libsvm.svm_problem;

/**
 * <p>Main class for SVM classification.</p>
 * 
 * <p>Requires data format {class_label, feature_1, feature_2, feature_3, ...}</p>
 * 
 * <p>
 * Features must be aligned between train and test data sets.
 * The same feature extraction methods should be used on both.
 * </p>
 * 
 * <p>
 * reference: http://www.csie.ntu.edu.tw/~cjlin/libsvm/<br>
 * reference: https://github.com/arnaudsj/libsvm
 * </p>
 * 
 * @author Ryan Lacey <rlacey@mit.edu>
 *
 */

public class Main {

	private static final String DEFAULT_PARAM = "-t 2 -c 100";	
	
	private static final int CLASSES = 3;
	
	private static double[][] train = {
		{1, 100,209.12,1.8887,4.9141,3.0622,0.043553,7.9675,0.092287,0.52947,0.20349,0.43119,0},
		{1, 147.14,206.94,1.5252,4.2234,0.86904,0.041539,2.4065,0.039705,0.65566,0.23678,0.22633,0},
		{1, 150.89,225.05,1.3347,4.1762,2.1536,0.061708,6.7384,0.14758,0.74923,0.23945,0.57267,0},
		{1, 189.48,274.54,2.0066,3.8604,1.1345,0.035255,2.1826,0.055627,0.49836,0.25904,0.40872,0},
		{1, 156.82,261.69,2.4784,5.0039,0.67926,0.079213,1.3714,0.046449,0.40348,0.19985,0.11718,0},
		{1, 105.06,224.94,1.4998,6.2432,1.4781,0.056949,6.1529,0.28332,0.66674,0.16017,0.79685,0},
		{1, 105.3,224.99,1.4888,6.6792,1.4569,0.034575,6.5363,0.14467,0.67169,0.14972,0.62646,0},
		{1, 156.82,261.69,2.4784,5.0039,0.67926,0.079213,1.3714,0.046449,0.40348,0.19985,0.11718,0},
		{2, 100,409.22,1.6026,4.6398,0.67439,0.085739,1.9524,0.065971,0.62398,0.21553,0.16584,9},
//		{2, 188.15,337.43,1.591,3.1482,0.38518,0.068552,0.76219,0.042433,0.62854,0.31764,0.19662,3},
		{2, 181.19,202.76,1.7371,3.027,1.1055,0.084481,1.9264,0.076888,0.57566,0.33036,0.30066,6},
		{2, 100.02,409.16,1.6106,4.685,0.7024,0.076038,2.0432,0.070091,0.6209,0.21345,0.19675,9},
		{2, 196.15,275.91,2.1553,13.378,0.092028,0.010021,0.5712,0.016768,0.46397,0.074752,0.12508,38},
		{2, 199.95,200.09,2.3517,8.2873,0.99991,0.0047242,3.5237,0.010166,0.42523,0.12067,0.25965,9},
		{2, 199.46,200.04,2.3221,8.9696,1.0049,0.0065189,3.8818,0.046006,0.43065,0.11149,0.7868,7},
		{2, 169.36,332.51,1.6687,7.6277,0.49031,0.046449,2.2412,0.10475,0.59926,0.1311,0.29567,15},
		{3, 100,205.35,1.5841,3.402,2.2292,0.10328,4.7873,0.12612,0.63126,0.29394,0.35894,0},
		{3, 100,200.01,1.4491,2.2272,1.4417,0.41185,2.2159,0.27079,0.69011,0.449,0.29522,0},
		{3, 104,243.41,1.3232,1.9151,0.95349,0.48868,1.3801,0.2202,0.75577,0.52216,0.23528,0},
		{3, 100,205.35,1.5841,3.402,2.2292,0.10328,4.7873,0.12612,0.63126,0.29394,0.35894,0},
		{3, 195.27,221.28,2.0769,3.6437,1.0636,0.067194,1.8659,0.048392,0.48148,0.27445,0.19765,1},
		{3, 100.08,200.06,1.4383,2.5484,1.5211,0.24873,2.695,0.17604,0.69525,0.3924,0.27772,0},
		{3, 119.77,201.59,1.2718,4.646,1.1098,0.063053,4.0542,0.11421,0.78628,0.21524,0.38985,0},
		{3, 147.75,752.82,1.6575,2.7569,0.093682,1.155,0.15582,0.91384,0.60332,0.36273,0.28698,8},
		{3, 175.38,200.03,1.7464,3.5494,1.0956,0.082011,2.2267,0.13092,0.57261,0.28174,0.44974,0},
		{3, 147.75,752.82,1.6575,2.7569,0.093682,1.155,0.15582,0.91384,0.60332,0.36273,0.28698,8},
		{3, 175.43,301.86,1.7615,3.8949,1.0818,0.042764,2.3921,0.11894,0.56771,0.25675,0.7141,0}
	};
	
	private static double[][] test = {
		{2, 188.15,337.43,1.591,3.1482,0.38518,0.068552,0.76219,0.042433,0.62854,0.31764,0.19662,3},
	};

	public static void main(String[] args) {
		Data data = new Data(train);
		double[][] normTrain = data.getNormalizedData();
		double[][] normTest = data.normalizeExternalDataset(test);
		
		svm_parameter parameter = Parameter.generate(DEFAULT_PARAM);		
		
		svm_problem problem = Problem.generate(parameter, normTrain);

		svm_model model = svm.svm_train(problem, parameter);

		System.out.println("\nEvaluating...");
		for (int i = 0; i < normTest.length; i++) {
			System.out.printf("Node %d", i);
			Classify.evaluate(normTest[i], CLASSES, model);
		}
	}
}