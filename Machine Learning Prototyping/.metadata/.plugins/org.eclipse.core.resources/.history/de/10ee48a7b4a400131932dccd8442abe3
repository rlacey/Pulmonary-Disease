package main;

import java.util.ArrayList;
import java.util.Arrays;

import org.apache.commons.math3.linear.RealMatrix;

import algorithms.Perceptron;


import utils.FeatureMatrix;
import utils.LinearSeparator;
import utils.Parser;

public class Main {

	public static void main(String[] args) {
		/**
		 * INITIALIZE
		 */
		// Bag of words
		ArrayList<String> dictionary = Parser.tokenize("train-tweet");
		// Training data labels
		ArrayList<String> labels = Parser.vectorizeLines("train-answer");
		// Training feature matrix
		RealMatrix featureMatrix = FeatureMatrix.construct("train-tweet", dictionary);	
		
		/**
		 * TRAIN PERCEPTRON
		 */
		System.out.println("Training perceptron...");
		// CatrainingActualsulate linear separator
		LinearSeparator separator = Perceptron.train(featureMatrix, labels);	
		// Weights
		RealMatrix theta = separator.theta();
		// Offset parameter
		double theta_0 = separator.theta_0();
		System.out.println("Training complete.");
		
		/**
		 * CLASSIFY TRAINING DATA
		 */
		System.out.println("Classifying training data..");
		// Labels assigned to training data by separator
		RealMatrix trainingPredictionsMatrix = Perceptron.classify(featureMatrix, theta, theta_0);		
		System.out.println("Classification complete");
		
		/**
		 * ANALYZE TRAINING DATA
		 */
		System.out.println("Analyzing...");
		double[] trainingPredictions = trainingPredictionsMatrix.getRow(0);
		double[] trainingActuals = new double[labels.size()];
		for (int i=0; i<labels.size(); i++) {
			trainingActuals[i] = Double.parseDouble(labels.get(i));
		}
		double correct = 0;
		for (int i=0; i<labels.size(); i++) {
			if (Math.abs(trainingPredictions[i] - trainingActuals[i]) <= 0.00000001) {
				correct++;
			}
		}
		double percent = correct / labels.size();
		System.out.println("Algorithm got " + correct + " of " + labels.size() + " correct (" + percent*100 + "%)");
	}

}
