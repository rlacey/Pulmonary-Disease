package Main;

import java.util.ArrayList;
import java.util.HashMap;

import utils.FeatureMatrix;
import utils.Tokenizer;

import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.MatrixUtils;
import org.apache.commons.math3.linear.RealMatrix;

public class Main {

	public static void main(String[] args) {
		Tokenizer tokenizer = new Tokenizer("train-tweet", true);
		ArrayList<String> tokens = tokenizer.getTokens();
//		for(String s: tokens){
//			  System.out.println(s);
//		}
		FeatureMatrix matrix = new FeatureMatrix("train-answer");
//		System.out.println(matrix.getMatrix());
		
		Tokenizer tokenizer2 = new Tokenizer("train-tweet", true);
		ArrayList<String> tokens2 = tokenizer2.getTokens();
		for(String s: tokens2){
			System.out.println(s);
		}
//		// Create a real matrix with two rows and three columns, using a factory
//		// method that selects the implementation class for us.
//		double[][] matrixData = { {1, 1}, {2, 2}};
//		RealMatrix m = MatrixUtils.createRealMatrix(matrixData);
//		RealMatrix z = MatrixUtils.createRealMatrix(3,3);
//
//		// One more with three rows, two columns, this time instantiating the
//		// RealMatrix implementation class directly.
////		double[][] matrixData2 = { {1d,2d}, {2d,5d}, {1d, 7d}};
//		double[][] matrixData2 = { {2d,2d}, {2d,5d}};
//		RealMatrix n = new Array2DRowRealMatrix(matrixData2);
//
//		// Note: The constructor copies  the input double[][] array in both cases.
//
//		// Now multiply m by n
//		RealMatrix p = m.multiply(n);
//		System.out.println(p.getRowDimension());    // 2
//		System.out.println(p.getColumnDimension()); // 2
//		System.out.println(m);
//		System.out.println(n);
//		System.out.println(p);
//		System.out.println(z);
//		
//		HashMap<String, Integer> d = new HashMap<String, Integer>();
//		d.put("hi", 1);
//		d.put("hi", 1);
//		d.put("what", 1);
//		System.out.println(d);
	}

}
